@import "utils";
@import "config";
@import "temp";
@import "emotionList";

#navbar {
  display: flex;
  align-items: center;
  justify-content: space-between;

  .nav-link {
    display: inline-block;
    padding: 0.8rem 2rem;
    transition: all 0.5s;
    border-bottom: 2px solid transparent;
    cursor: pointer;
    border-radius: 1.5rem;
    font-weight: 900;

    color: set-color($primary-color);
    &:hover {
      border-bottom: 2px solid $secondary-color;
    }
  }

  .selected {
    @include set-color-and-bg($secondary-color);
  }
}

.hidden {
  display: hidden;
}

#filters {
  margin-top: 20px;
  margin-bottom: 10px;

  .table-filter {
    min-width: 200px;
    padding: 15px;
    position: relative;

    .select-filter {
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: space-between;
      select {
        width: 50%;
      }
    }
    input {
      width: 100%;
    }
  }
}

table {
  white-space: nowrap !important;

  // border-collapse: collapse;
  border-spacing: 0px;
  margin-top: 20px;
  font-size: 1rem;
  cursor: default;
  width: 100%;
  height: 100%;
}

th {
  padding: 12px 15px;
  text-align: left;
  font-weight: bold;
  // achieves the same visual effects as a bottom and right border
  // Hack, since border do not work well with two colors and I can not use
  // border-collapse: seperate; as I will be dynaimcally adding elements to tr
  // it creates a visual defect
  box-shadow: -3px 0px 0px inset #fff, 0px -2px 0px inset #333;
}

.dropDown-emotion {
  width: 100%;
  height: 100%;
  display: flex;

  div {
    padding-left: 8px;
  }
}

.front-button-wrap {
  position: absolute;
  top: -1px;
  left: -5px;
  display: flex;
  flex-direction: column;
  // justify-content: space-between;
  align-items: center;

  div {
    padding: 1px 2px;
  }
  & > div {
    margin-bottom: 2px;
  }
}

tr {
  position: relative;
  width: 100%;
  height: 100%;

  // Child of td element, here because it's together with front-button-wrap ()
  .open-button-style {
    position: absolute;
    top: 9px;
    right: 1px;
    padding: 3px;
  }
}

td {
  max-width: 150px;
  min-width: 100px;
  position: relative;
  overflow: hidden;
  text-overflow: ellipsis;
  padding: 15px;
  padding-right: 0rem;
  // refer to th for reasons to use box-shadow
  box-shadow: -3px 0px 0px inset #fff, 0px -1px 0px inset #aaa;

  .count {
    border-radius: 5px;
    padding: 0.5rem;
    margin-right: 0.5rem;
  }
}

th:hover,
td:hover {
  background-color: lighten($secondary-color, 20%);
}

.tooltip {
  position: relative;

  .tooltiptext {
    // visual
    background-color: $secondary-color;
    border: 2px solid $primary-color;
    border-radius: 6px;
    padding: 10px;
    padding-top: 7px;
    font-size: 0.9rem;
    // height: 100%;
    width: 170%;

    // non-visual
    visibility: hidden;
    white-space: pre-wrap;
    text-align: auto;

    /* Position the tooltip text */
    position: absolute;
    z-index: 2;
    top: 0px;
    left: 0px;
  }

  &:hover {
    .tooltiptext {
      visibility: visible;
    }
    div {
      visibility: hidden !important;
    }
  }
}
