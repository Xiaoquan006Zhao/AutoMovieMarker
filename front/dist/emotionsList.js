/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/auth/clerk.js":
/*!***************************!*\
  !*** ./src/auth/clerk.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"accessToken\": () => (/* binding */ accessToken),\n/* harmony export */   \"availableUtil\": () => (/* binding */ availableUtil)\n/* harmony export */ });\n/* harmony import */ var _utils_accessDB_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/accessDB.js */ \"./src/utils/accessDB.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar publishableKey = \"pk_test_Y3VubmluZy1yaGluby01NS5jbGVyay5hY2NvdW50cy5kZXYk\";\n\n// Load accessToken and availableUtil from session storage\nvar accessToken = sessionStorage.getItem(\"accessToken\");\nvar availableUtil = sessionStorage.getItem(\"availableUtil\");\nvar startClerk = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var Clerk, userButton, authLinks;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          Clerk = window.Clerk;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return Clerk.load();\n        case 4:\n          userButton = document.getElementById(\"user-button\");\n          authLinks = document.getElementById(\"auth-links\");\n          Clerk.addListener( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref2) {\n              var user, now, response;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    user = _ref2.user;\n                    // Display links conditionally based on user state\n                    authLinks.style.display = user ? \"none\" : \"block\";\n                    if (!user) {\n                      _context.next = 15;\n                      break;\n                    }\n                    now = new Date().toISOString();\n                    if (!(availableUtil && now > availableUtil || !accessToken)) {\n                      _context.next = 13;\n                      break;\n                    }\n                    _context.next = 7;\n                    return _utils_accessDB_js__WEBPACK_IMPORTED_MODULE_0__.getNewAccessToken(user.id, now);\n                  case 7:\n                    response = _context.sent;\n                    accessToken = response.token;\n                    availableUtil = response.availableUtil;\n\n                    // Store accessToken and availableUtil in session storage\n                    sessionStorage.setItem(\"accessToken\", accessToken);\n                    sessionStorage.setItem(\"availableUtil\", availableUtil);\n                    console.log(accessToken);\n                  case 13:\n                    _context.next = 20;\n                    break;\n                  case 15:\n                    accessToken = null;\n                    availableUtil = null;\n\n                    // Clear accessToken and availableUtil from session storage\n                    sessionStorage.removeItem(\"accessToken\");\n                    sessionStorage.removeItem(\"availableUtil\");\n                    console.log(\"Not Admin\");\n                  case 20:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function (_x) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n          if (Clerk.user) {\n            // Mount user button component\n            Clerk.mountUserButton(userButton);\n            userButton.style.margin = \"auto\";\n          }\n          _context2.next = 13;\n          break;\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.error(\"Error starting Clerk: \", _context2.t0);\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[1, 10]]);\n  }));\n  return function startClerk() {\n    return _ref.apply(this, arguments);\n  };\n}();\n(function () {\n  var script = document.createElement(\"script\");\n  script.setAttribute(\"data-clerk-publishable-key\", publishableKey);\n  script.async = true;\n  script.src = \"https://cdn.jsdelivr.net/npm/@clerk/clerk-js@latest/dist/clerk.browser.js\";\n  script.crossOrigin = \"anonymous\";\n  script.addEventListener(\"load\", startClerk);\n  script.addEventListener(\"error\", function () {\n    document.getElementById(\"no-frontend-api-warning\").hidden = false;\n  });\n  document.body.appendChild(script);\n})();\n\n//# sourceURL=webpack://auto-movie-marker/./src/auth/clerk.js?");

/***/ }),

/***/ "./src/emotionList/dragAndDropCategory.js":
/*!************************************************!*\
  !*** ./src/emotionList/dragAndDropCategory.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDraggable\": () => (/* binding */ createDraggable)\n/* harmony export */ });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utils */ \"./src/utils/utils.js\");\n/* harmony import */ var _utils_accessDB__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/accessDB */ \"./src/utils/accessDB.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\nvar addCategoryButton = document.querySelector(\"#add-category-button\");\nvar categoryInput = document.getElementById(\"category-input\");\nvar draggedItem = null;\nvar enterCount = 0;\nfunction init() {\n  addCategoryButton.addEventListener(\"click\", function (e) {\n    createCategory();\n  });\n}\nfunction addDragToLi(e) {\n  draggedItem = e.target;\n  var category = e.target.closest(\".category\");\n  category.classList.add(\"dropzone\");\n}\nfunction createDraggable(emotion_name, emotion_id, emotion_category) {\n  var li = document.createElement(\"li\");\n  li.setAttribute(\"draggable\", true);\n  li.id = emotion_id;\n  li.appendChild(document.createTextNode(emotion_name));\n  li.addEventListener(\"dragstart\", addDragToLi);\n  var categoryElement = document.querySelector(\"#\".concat(emotion_category));\n  if (!categoryElement) {\n    categoryElement = createCategory(emotion_category);\n  }\n  categoryElement.querySelector(\"ul\").appendChild(li);\n}\n\n// helper method to add eventlisteners for category\nfunction addDragAndDrop(category) {\n  category.addEventListener(\"dragenter\", function (e) {\n    var category = e.target.closest(\".category\");\n    if (category) {\n      e.currentTarget.classList.add(\"dropzone\");\n    }\n  });\n  category.addEventListener(\"dragover\", function (e) {\n    e.preventDefault();\n  });\n  category.addEventListener(\"dragleave\", function (e) {\n    var categoryElement = e.currentTarget;\n    var relatedTarget = e.relatedTarget;\n    if (!categoryElement.contains(relatedTarget)) {\n      e.currentTarget.classList.remove(\"dropzone\");\n      return;\n    }\n  });\n  category.addEventListener(\"drop\", /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var newCategory;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            if (!e.target.closest(\".category\")) {\n              _context.next = 7;\n              break;\n            }\n            e.currentTarget.querySelector(\".items\").appendChild(draggedItem);\n            e.currentTarget.classList.remove(\"dropzone\");\n            newCategory = e.currentTarget.querySelector(\"h2\").textContent;\n            _context.next = 7;\n            return (0,_utils_accessDB__WEBPACK_IMPORTED_MODULE_1__.updateEmotionCategory)(draggedItem.id, newCategory);\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\nfunction createCategory(categoryText) {\n  var categoryName = categoryText ? categoryText : categoryInput.value.trim();\n  if (!(0,_utils_utils__WEBPACK_IMPORTED_MODULE_0__.validateInputText)(categoryName, categoryInput)) {\n    return;\n  }\n\n  // const category =\n  var divCategory = document.createElement(\"div\");\n  divCategory.classList.add(\"category\");\n  divCategory.id = categoryName;\n  var h2 = document.createElement(\"h2\");\n  h2.appendChild(document.createTextNode(categoryName));\n  var ul = document.createElement(\"ul\");\n  ul.classList.add(\"items\");\n  divCategory.append(h2, ul);\n  addDragAndDrop(divCategory);\n  document.querySelector(\".categories\").insertBefore(divCategory, document.querySelector(\".categories\").lastElementChild);\n  return divCategory;\n}\ninit();\n\n//# sourceURL=webpack://auto-movie-marker/./src/emotionList/dragAndDropCategory.js?");

/***/ }),

/***/ "./src/emotionList/emotionsList.js":
/*!*****************************************!*\
  !*** ./src/emotionList/emotionsList.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _markersMain_generalOverlay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../markersMain/generalOverlay */ \"./src/markersMain/generalOverlay.js\");\n/* harmony import */ var _utils_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/config */ \"./src/utils/config.js\");\n/* harmony import */ var insert_text_at_cursor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! insert-text-at-cursor */ \"./node_modules/insert-text-at-cursor/dist/index.esm.js\");\n/* harmony import */ var _dragAndDropCategory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dragAndDropCategory */ \"./src/emotionList/dragAndDropCategory.js\");\n/* harmony import */ var _utils_accessDB__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/accessDB */ \"./src/utils/accessDB.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/utils */ \"./src/utils/utils.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\n\nvar addEmotionButton = document.querySelector(\"#add-emotion-button\");\nvar emotionInput = document.getElementById(\"emotion-input\");\nvar itemList = document.getElementById(\"item-list\");\nfunction displayItems() {\n  return _displayItems.apply(this, arguments);\n}\nfunction _displayItems() {\n  _displayItems = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var records;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _utils_accessDB__WEBPACK_IMPORTED_MODULE_4__.getAllEmotions();\n        case 2:\n          records = _context2.sent;\n          records.forEach(function (record) {\n            addItemToDOM(record.emotion_name, record.emotion_id);\n            (0,_dragAndDropCategory__WEBPACK_IMPORTED_MODULE_3__.createDraggable)(record.emotion_name, record.emotion_id, record.category);\n          });\n          resetUI();\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _displayItems.apply(this, arguments);\n}\nfunction onAddItemSubmit(_x) {\n  return _onAddItemSubmit.apply(this, arguments);\n} // helper method to create the emotion card\nfunction _onAddItemSubmit() {\n  _onAddItemSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {\n    var newEmotion, insertResponse, emotionId;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          newEmotion = emotionInput.value;\n          if (_utils_utils__WEBPACK_IMPORTED_MODULE_5__.validateInputText(newEmotion, emotionInput)) {\n            _context3.next = 3;\n            break;\n          }\n          return _context3.abrupt(\"return\");\n        case 3:\n          _context3.next = 5;\n          return _utils_accessDB__WEBPACK_IMPORTED_MODULE_4__.insertEmotion(newEmotion);\n        case 5:\n          insertResponse = _context3.sent;\n          _context3.next = 8;\n          return insertResponse.insertId;\n        case 8:\n          emotionId = _context3.sent;\n          // Create item DOM element\n          addItemToDOM(newEmotion, emotionId);\n          resetUI();\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _onAddItemSubmit.apply(this, arguments);\n}\nfunction createButton(classes) {\n  var button = document.createElement(\"button\");\n  button.className = classes;\n  var icon = createIcon(\"fa-solid fa-xmark\");\n  button.appendChild(icon);\n  return button;\n}\n\n// helper method to create the emotion card\nfunction createIcon(classes) {\n  var icon = document.createElement(\"i\");\n  icon.className = classes;\n  return icon;\n}\nfunction addItemToDOM(item, itemId) {\n  // Create list item\n  var li = document.createElement(\"li\");\n  li.classList.add(\"dropDown-enable\");\n  li.setAttribute(\"id\", itemId);\n  li.appendChild(document.createTextNode(item));\n  var button = createButton(\"remove-item btn-remove\");\n  li.appendChild(button);\n\n  // Add li to the DOM\n  itemList.appendChild(li);\n}\n\n// ---------------------------------   Overlay starts   ----------------------------------------------\n\nfunction getEmotionLi(clicked) {\n  var emotion_name = clicked.firstChild.textContent;\n  var emotion_id = clicked.id;\n  return {\n    emotion_name: emotion_name,\n    emotion_id: emotion_id,\n    clicked: clicked\n  };\n}\nfunction updateEmotionLi(_x2) {\n  return _updateEmotionLi.apply(this, arguments);\n}\nfunction _updateEmotionLi() {\n  _updateEmotionLi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(updateReference) {\n    var emotion_id, newName;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!_utils_utils__WEBPACK_IMPORTED_MODULE_5__.isUpdated(updateReference)) {\n            _context4.next = 6;\n            break;\n          }\n          emotion_id = updateReference.id;\n          _context4.next = 4;\n          return _utils_accessDB__WEBPACK_IMPORTED_MODULE_4__.getEmotionName(emotion_id);\n        case 4:\n          newName = _context4.sent;\n          updateReference.firstChild.textContent = newName.emotion_name;\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _updateEmotionLi.apply(this, arguments);\n}\nfunction createEmojiPicker(emotion_name) {\n  var divWrapper = document.createElement(\"div\");\n\n  // create the parent div element\n  var emotionInputSubmit = document.createElement(\"div\");\n  emotionInputSubmit.setAttribute(\"id\", \"emotion-input-submit\");\n\n  // create the input element and set its attributes\n  var input = document.createElement(\"input\");\n  input.setAttribute(\"id\", \"emotion-input\");\n  input.setAttribute(\"type\", \"text\");\n  input.setAttribute(\"placeholder\", \"Type here\");\n  input.value = emotion_name;\n\n  // append the label and button elements to the parent div element\n  emotionInputSubmit.appendChild(input);\n\n  // create the emoji-picker element\n  var emojiPicker = document.createElement(\"emoji-picker\");\n  emojiPicker.addEventListener(\"emoji-click\", function (e) {\n    (0,insert_text_at_cursor__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input, e.detail.unicode);\n  });\n  divWrapper.append(emotionInputSubmit, emojiPicker);\n  return {\n    divWrapper: divWrapper,\n    input: input\n  };\n}\nfunction createOverlayEmotionUpdate(x, y, data) {\n  var emotion_name = data.emotion_name,\n    emotion_id = data.emotion_id,\n    clicked = data.clicked;\n\n  // const divEventEnable = createOverlaySection(\n  //   updateEmotionLi,\n  //   clicked,\n  //   x < window.innerWidth / 2 - window.scrollX ? x + 150 : x - 345,\n  //   y - 250,\n  //   500,\n  //   345\n  // );\n\n  var divEventEnable = (0,_markersMain_generalOverlay__WEBPACK_IMPORTED_MODULE_0__.createOverlaySection)(updateEmotionLi, clicked, x, y, clicked.offsetHeight, clicked.offsetWidth);\n  var divBox = document.createElement(\"div\");\n  divBox.classList.add(\"overlay-box\");\n  divBox.style.maxHeight = \"100%\";\n  var _createEmojiPicker = createEmojiPicker(emotion_name),\n    divWrapper = _createEmojiPicker.divWrapper,\n    input = _createEmojiPicker.input;\n  input.addEventListener(\"keydown\", /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var nextDivBlockTrigger;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(e.key === \"Enter\")) {\n              _context.next = 7;\n              break;\n            }\n            e.preventDefault();\n            _context.next = 4;\n            return _utils_accessDB__WEBPACK_IMPORTED_MODULE_4__.updateEmotionName(emotion_id, input.value);\n          case 4:\n            _utils_utils__WEBPACK_IMPORTED_MODULE_5__.update(clicked);\n\n            // use enter to trigger click event, as if I have clicked out of overlay\n            nextDivBlockTrigger = _utils_config__WEBPACK_IMPORTED_MODULE_1__.overlayContainer.lastChild.querySelector(\".stop-event\");\n            nextDivBlockTrigger.click();\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x3) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  divBox.appendChild(divWrapper);\n  divEventEnable.appendChild(divBox);\n  input.focus();\n  input.selectionStart = 0;\n  input.selectionEnd = 0;\n  _utils_utils__WEBPACK_IMPORTED_MODULE_5__.offsetOverlayToViewport(divEventEnable);\n}\nfunction onClickItem(e) {\n  if (e.target.parentElement.classList.contains(\"remove-item\")) {\n    removeItem(e.target.parentElement.parentElement);\n  } else if (e.target.closest(\".dropDown-enable\")) {\n    var li = e.target.closest(\".dropDown-enable\");\n    (0,_markersMain_generalOverlay__WEBPACK_IMPORTED_MODULE_0__.handleOverlay)(e, getEmotionLi, null, createOverlayEmotionUpdate);\n  }\n}\nfunction removeItem(item) {\n  if (confirm(\"Do you want to delete [\".concat(item.textContent, \"]?\"))) {\n    // Remove item from DOM\n    _utils_accessDB__WEBPACK_IMPORTED_MODULE_4__.deleteEmotion(item.id);\n    item.remove();\n  }\n}\nfunction resetUI() {\n  emotionInput.value = \"\";\n}\n\n// Initialize app\nfunction init() {\n  // Event Listeners\n  addEmotionButton.addEventListener(\"click\", onAddItemSubmit);\n  itemList.addEventListener(\"click\", onClickItem);\n  document.addEventListener(\"DOMContentLoaded\", displayItems);\n  document.querySelector(\"emoji-picker\").addEventListener(\"emoji-click\", function (e) {\n    (0,insert_text_at_cursor__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(document.querySelector(\"#emotion-input\"), e.detail.unicode);\n  });\n\n  // Global ESC click to close the frontmost overlay\n  document.addEventListener(\"keydown\", function (e) {\n    if (e.key === \"Escape\" && _utils_config__WEBPACK_IMPORTED_MODULE_1__.overlayContainer.lastChild) {\n      var nextDivBlockTrigger = _utils_config__WEBPACK_IMPORTED_MODULE_1__.overlayContainer.lastChild.querySelector(\".stop-event\");\n      nextDivBlockTrigger.click();\n    }\n  });\n  resetUI();\n}\ninit();\n\n//# sourceURL=webpack://auto-movie-marker/./src/emotionList/emotionsList.js?");

/***/ }),

/***/ "./src/markersMain/generalOverlay.js":
/*!*******************************************!*\
  !*** ./src/markersMain/generalOverlay.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createButtons\": () => (/* binding */ createButtons),\n/* harmony export */   \"createEmotionEmbed\": () => (/* binding */ createEmotionEmbed),\n/* harmony export */   \"createOverlayEmbed\": () => (/* binding */ createOverlayEmbed),\n/* harmony export */   \"createOverlaySection\": () => (/* binding */ createOverlaySection),\n/* harmony export */   \"handleOverlay\": () => (/* binding */ handleOverlay)\n/* harmony export */ });\n/* harmony import */ var _utils_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/config.js */ \"./src/utils/config.js\");\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils.js */ \"./src/utils/utils.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\nfunction createOverlaySection(callback_update, updateReference) {\n  var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n  var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 100;\n  var height = arguments.length > 4 ? arguments[4] : undefined;\n  var width = arguments.length > 5 ? arguments[5] : undefined;\n  var divTop = document.createElement(\"div\");\n  divTop.setAttribute(\"style\", \"pointer-events: auto; position: relative; z-index: 0\");\n  var divBlock = document.createElement(\"div\");\n  divBlock.classList.add(\"stop-event\");\n  divBlock.setAttribute(\"style\", \"position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; \");\n  var divPos = document.createElement(\"div\");\n  divPos.setAttribute(\"style\", \"position: fixed;left: \".concat(x, \"px;top: \").concat(y, \"px;pointer-events: none;\"));\n  if (height) {\n    divPos.style.height = height + \"px\";\n  }\n  if (width) {\n    divPos.style.width = width + \"px\";\n  }\n  var divEventEnable = document.createElement(\"div\");\n  divEventEnable.setAttribute(\"style\", \"position: relative; top: 0%; pointer-events: auto;\");\n  divPos.appendChild(divEventEnable);\n  divTop.append(divBlock, divPos);\n  _utils_config_js__WEBPACK_IMPORTED_MODULE_0__.overlayContainer.appendChild(divTop);\n\n  // click out\n  divBlock.addEventListener(\"click\", /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _utils_config_js__WEBPACK_IMPORTED_MODULE_0__.overlayContainer.removeChild(_utils_config_js__WEBPACK_IMPORTED_MODULE_0__.overlayContainer.lastChild);\n            _context.next = 3;\n            return callback_update(updateReference);\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  return divEventEnable;\n}\nfunction handleOverlay(_x2, _x3, _x4, _x5) {\n  return _handleOverlay.apply(this, arguments);\n}\nfunction _handleOverlay() {\n  _handleOverlay = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e, callback_getParam, callback_getData, callback_createOverlay) {\n    var clicked, input, data, rect;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          clicked = e.target.closest(\".dropDown-enable\");\n          if (clicked) {\n            _context2.next = 3;\n            break;\n          }\n          return _context2.abrupt(\"return\");\n        case 3:\n          input = callback_getParam(clicked, e);\n          if (!callback_getData) {\n            _context2.next = 10;\n            break;\n          }\n          _context2.next = 7;\n          return callback_getData(input);\n        case 7:\n          _context2.t0 = _context2.sent;\n          _context2.next = 11;\n          break;\n        case 10:\n          _context2.t0 = input;\n        case 11:\n          data = _context2.t0;\n          rect = clicked.getBoundingClientRect(); // callback_createOverlay(rect.x, rect.y + clicked.clientHeight, data);\n          callback_createOverlay(rect.left, rect.top, data);\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _handleOverlay.apply(this, arguments);\n}\nfunction createEmotionEmbed(clip, parentElement) {\n  clip[\"emotion_names\"].forEach(function (emotion, index) {\n    var divEmotion = document.createElement(\"div\");\n    divEmotion.id = clip[\"emotion_ids\"][index];\n    divEmotion.appendChild(document.createTextNode(emotion));\n    parentElement.appendChild(divEmotion);\n  });\n  parentElement.classList.add(\"dropDown-emotion\");\n  parentElement.classList.add(\"dropDown-enable\");\n  return parentElement;\n}\nfunction createOverlayEmbed(text) {\n  var divWrap = document.createElement(\"div\");\n  divWrap.classList.add(\"no-wrap\");\n  var spanText = document.createElement(\"span\");\n  spanText.classList.add(\"emotion-text\");\n  spanText.classList.add(\"dot-icon\");\n  spanText.appendChild(document.createTextNode(text));\n  divWrap.appendChild(spanText);\n  return divWrap;\n}\nfunction createButtons(parent, buttonSetup) {\n  // float buttons\n  var divButtons = document.createElement(\"div\");\n  divButtons.classList.add(\"front-button-wrap\");\n  buttonSetup.forEach(function (button) {\n    var addButton = document.createElement(\"div\");\n    addButton.innerText = button.content;\n    divButtons.appendChild(addButton);\n    addButton.classList.add(\"btn-small\");\n    buttonClickEventAdd(addButton, button.callback);\n  });\n  parent.appendChild(divButtons);\n}\nfunction buttonClickEventAdd(button, clickCallback) {\n  button.addEventListener(\"click\", clickCallback);\n}\n\n//# sourceURL=webpack://auto-movie-marker/./src/markersMain/generalOverlay.js?");

/***/ }),

/***/ "./src/utils/accessDB.js":
/*!*******************************!*\
  !*** ./src/utils/accessDB.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deleteClip\": () => (/* binding */ deleteClip),\n/* harmony export */   \"deleteEmotion\": () => (/* binding */ deleteEmotion),\n/* harmony export */   \"getAllClipsInMovie\": () => (/* binding */ getAllClipsInMovie),\n/* harmony export */   \"getAllClipsMatch\": () => (/* binding */ getAllClipsMatch),\n/* harmony export */   \"getAllEmotionInClip\": () => (/* binding */ getAllEmotionInClip),\n/* harmony export */   \"getAllEmotions\": () => (/* binding */ getAllEmotions),\n/* harmony export */   \"getAllMovieIds\": () => (/* binding */ getAllMovieIds),\n/* harmony export */   \"getClipDetail\": () => (/* binding */ getClipDetail),\n/* harmony export */   \"getClipField\": () => (/* binding */ getClipField),\n/* harmony export */   \"getClipsEmotionInMovie\": () => (/* binding */ getClipsEmotionInMovie),\n/* harmony export */   \"getEmotionName\": () => (/* binding */ getEmotionName),\n/* harmony export */   \"getEmotionsLinkedAndUnlined\": () => (/* binding */ getEmotionsLinkedAndUnlined),\n/* harmony export */   \"getMovieName\": () => (/* binding */ getMovieName),\n/* harmony export */   \"getNewAccessToken\": () => (/* binding */ getNewAccessToken),\n/* harmony export */   \"insertClip\": () => (/* binding */ insertClip),\n/* harmony export */   \"insertEmotion\": () => (/* binding */ insertEmotion),\n/* harmony export */   \"updateClipEmotionLink\": () => (/* binding */ updateClipEmotionLink),\n/* harmony export */   \"updateClipField\": () => (/* binding */ updateClipField),\n/* harmony export */   \"updateEmotionCategory\": () => (/* binding */ updateEmotionCategory),\n/* harmony export */   \"updateEmotionName\": () => (/* binding */ updateEmotionName),\n/* harmony export */   \"updateMovieName\": () => (/* binding */ updateMovieName)\n/* harmony export */ });\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"./src/utils/config.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./src/utils/utils.js\");\n/* harmony import */ var _auth_clerk_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../auth/clerk.js */ \"./src/auth/clerk.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\nfunction templateFetch(_x, _x2, _x3) {\n  return _templateFetch.apply(this, arguments);\n}\nfunction _templateFetch() {\n  _templateFetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(query, method, body) {\n    var response, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"\".concat(_config_js__WEBPACK_IMPORTED_MODULE_0__.baseurl).concat(query), {\n            method: method,\n            headers: {\n              Authorization: \"Bearer \".concat(_auth_clerk_js__WEBPACK_IMPORTED_MODULE_2__.accessToken),\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          });\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _templateFetch.apply(this, arguments);\n}\nfunction getNewAccessToken(_x4, _x5) {\n  return _getNewAccessToken.apply(this, arguments);\n}\nfunction _getNewAccessToken() {\n  _getNewAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(user_id, currentTime) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return templateFetch(\"/__generateJWT\", \"POST\", {\n            user_id: user_id,\n            currentTime: currentTime\n          });\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getNewAccessToken.apply(this, arguments);\n}\nfunction deleteClip(_x6) {\n  return _deleteClip.apply(this, arguments);\n}\nfunction _deleteClip() {\n  _deleteClip = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(clip_id) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return templateFetch(\"/_deleteClip?clip_id=\".concat(clip_id), \"DELETE\");\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _deleteClip.apply(this, arguments);\n}\nfunction insertClip(_x7) {\n  return _insertClip.apply(this, arguments);\n}\n\n// Retrive all emotions\nfunction _insertClip() {\n  _insertClip = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(movie_id) {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return templateFetch(\"/_insertClip?movie_id=\".concat(movie_id), \"POST\");\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _insertClip.apply(this, arguments);\n}\nfunction getAllEmotions() {\n  return _getAllEmotions.apply(this, arguments);\n}\n\n// Given a movie_id, retrive all clips in the movie that has emotions.\n// used to populate the emotion/movie table\nfunction _getAllEmotions() {\n  _getAllEmotions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return templateFetch(\"/_getAllEmotions\", \"GET\");\n        case 2:\n          return _context5.abrupt(\"return\", _context5.sent);\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _getAllEmotions.apply(this, arguments);\n}\nfunction getClipsEmotionInMovie(_x8) {\n  return _getClipsEmotionInMovie.apply(this, arguments);\n}\n\n// Given a movie_id, retrive movie_name\nfunction _getClipsEmotionInMovie() {\n  _getClipsEmotionInMovie = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(movie_id) {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return templateFetch(\"/_getAllClipsInMovieWithEmotions?movie_id=\".concat(movie_id), \"GET\");\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _getClipsEmotionInMovie.apply(this, arguments);\n}\nfunction getMovieName(_x9) {\n  return _getMovieName.apply(this, arguments);\n}\n\n// Given a movie_id and emotion_id, retrive all clips that match\nfunction _getMovieName() {\n  _getMovieName = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(movie_id) {\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return templateFetch(\"/_getMovieName?movie_id=\".concat(movie_id), \"GET\");\n        case 2:\n          return _context7.abrupt(\"return\", _context7.sent);\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _getMovieName.apply(this, arguments);\n}\nfunction getAllClipsMatch(_x10) {\n  return _getAllClipsMatch.apply(this, arguments);\n}\n\n// Given a clip_id, retrive description, timecode, emotions, image\nfunction _getAllClipsMatch() {\n  _getAllClipsMatch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(input) {\n    var movie_id, emotion_id, clicked, data, descriptions, clipIds;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          movie_id = input.movie_id, emotion_id = input.emotion_id, clicked = input.clicked; // get all clips with matching movie_id and emotion_id\n          _context8.next = 3;\n          return templateFetch(\"/_getAllClipsMatch?movie_id=\".concat(movie_id, \"&emotion_id=\").concat(emotion_id), \"GET\");\n        case 3:\n          data = _context8.sent;\n          descriptions = data.map(function (clip) {\n            return clip.description;\n          });\n          clipIds = data.map(function (clip) {\n            return clip.clip_id;\n          });\n          return _context8.abrupt(\"return\", {\n            descriptions: descriptions,\n            clipIds: clipIds,\n            clicked: clicked\n          });\n        case 7:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return _getAllClipsMatch.apply(this, arguments);\n}\nfunction getClipDetail(_x11) {\n  return _getClipDetail.apply(this, arguments);\n}\n\n// Given a movieId, retrive all clips in the movie (has or has no emotions)\n// used to populate the movie page\nfunction _getClipDetail() {\n  _getClipDetail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(input) {\n    var clip_id, clicked, data, clipsWithEmotion;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          clip_id = input.clip_id, clicked = input.clicked;\n          _context9.next = 3;\n          return templateFetch(\"/_getClipDetail?clip_id=\".concat(clip_id), \"GET\");\n        case 3:\n          data = _context9.sent;\n          clipsWithEmotion = _utils_js__WEBPACK_IMPORTED_MODULE_1__.combineClipEmotion(data);\n          return _context9.abrupt(\"return\", {\n            clipsWithEmotion: clipsWithEmotion,\n            clicked: clicked\n          });\n        case 6:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return _getClipDetail.apply(this, arguments);\n}\nfunction getAllClipsInMovie(_x12) {\n  return _getAllClipsInMovie.apply(this, arguments);\n}\nfunction _getAllClipsInMovie() {\n  _getAllClipsInMovie = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(movie_id) {\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return templateFetch(\"/_getAllClipsInMovie?movie_id=\".concat(movie_id), \"GET\");\n        case 2:\n          return _context10.abrupt(\"return\", _context10.sent);\n        case 3:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return _getAllClipsInMovie.apply(this, arguments);\n}\nfunction getAllEmotionInClip(_x13) {\n  return _getAllEmotionInClip.apply(this, arguments);\n}\nfunction _getAllEmotionInClip() {\n  _getAllEmotionInClip = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(clip_id) {\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return templateFetch(\"/_getAllEmotionsInClip?clip_id=\".concat(clip_id), \"GET\");\n        case 2:\n          return _context11.abrupt(\"return\", _context11.sent);\n        case 3:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return _getAllEmotionInClip.apply(this, arguments);\n}\nfunction getEmotionsLinkedAndUnlined(_x14) {\n  return _getEmotionsLinkedAndUnlined.apply(this, arguments);\n}\nfunction _getEmotionsLinkedAndUnlined() {\n  _getEmotionsLinkedAndUnlined = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(input) {\n    var emotions, emotionIds, clipId, clicked, data, unlinkedEmotions, unlinkedEmotionIds;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          emotions = input.emotions, emotionIds = input.emotionIds, clipId = input.clipId, clicked = input.clicked;\n          _context12.next = 3;\n          return templateFetch(\"/_getAllEmotions\", \"GET\");\n        case 3:\n          data = _context12.sent;\n          unlinkedEmotions = data.filter(function (emotion) {\n            return !emotions.includes(emotion.emotion_name);\n          }).map(function (emotion) {\n            return emotion.emotion_name;\n          });\n          unlinkedEmotionIds = data.filter(function (emotion) {\n            return !emotions.includes(emotion.emotion_name);\n          }).map(function (emotion) {\n            return emotion.emotion_id;\n          });\n          return _context12.abrupt(\"return\", {\n            emotions: emotions,\n            emotionIds: emotionIds,\n            unlinkedEmotions: unlinkedEmotions,\n            unlinkedEmotionIds: unlinkedEmotionIds,\n            clipId: clipId,\n            clicked: clicked\n          });\n        case 7:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return _getEmotionsLinkedAndUnlined.apply(this, arguments);\n}\nfunction updateClipEmotionLink(_x15, _x16, _x17) {\n  return _updateClipEmotionLink.apply(this, arguments);\n}\nfunction _updateClipEmotionLink() {\n  _updateClipEmotionLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(clip_id, emotion_id, method) {\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          if (!(method === \"POST\")) {\n            _context13.next = 4;\n            break;\n          }\n          _context13.next = 3;\n          return templateFetch(\"/_addEmotionToClip?clip_id=\".concat(clip_id, \"&emotion_id=\").concat(emotion_id), method);\n        case 3:\n          return _context13.abrupt(\"return\", _context13.sent);\n        case 4:\n          _context13.next = 6;\n          return templateFetch(\"/_removeEmotionFromClip?clip_id=\".concat(clip_id, \"&emotion_id=\").concat(emotion_id), method);\n        case 6:\n          return _context13.abrupt(\"return\", _context13.sent);\n        case 7:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13);\n  }));\n  return _updateClipEmotionLink.apply(this, arguments);\n}\nfunction updateClipField(_x18, _x19, _x20) {\n  return _updateClipField.apply(this, arguments);\n}\nfunction _updateClipField() {\n  _updateClipField = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(clip_id, field, value) {\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return templateFetch(\"/_updateClipField?clip_id=\".concat(clip_id, \"&field=\").concat(field), \"PUT\", {\n            value: value\n          });\n        case 2:\n          return _context14.abrupt(\"return\", _context14.sent);\n        case 3:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee14);\n  }));\n  return _updateClipField.apply(this, arguments);\n}\nfunction getClipField(_x21, _x22) {\n  return _getClipField.apply(this, arguments);\n}\nfunction _getClipField() {\n  _getClipField = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(clip_id, field) {\n    return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n      while (1) switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return templateFetch(\"/_getClipField?clip_id=\".concat(clip_id, \"&field=\").concat(field), \"GET\");\n        case 2:\n          return _context15.abrupt(\"return\", _context15.sent);\n        case 3:\n        case \"end\":\n          return _context15.stop();\n      }\n    }, _callee15);\n  }));\n  return _getClipField.apply(this, arguments);\n}\nfunction insertEmotion(_x23) {\n  return _insertEmotion.apply(this, arguments);\n}\nfunction _insertEmotion() {\n  _insertEmotion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(emotionName) {\n    return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return templateFetch(\"/_insertEmotion\", \"POST\", {\n            value: emotionName\n          });\n        case 2:\n          return _context16.abrupt(\"return\", _context16.sent);\n        case 3:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16);\n  }));\n  return _insertEmotion.apply(this, arguments);\n}\nfunction deleteEmotion(_x24) {\n  return _deleteEmotion.apply(this, arguments);\n}\nfunction _deleteEmotion() {\n  _deleteEmotion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(emotion_id) {\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return templateFetch(\"/_deleteEmotion?emotion_id=\".concat(emotion_id), \"DELETE\");\n        case 2:\n          return _context17.abrupt(\"return\", _context17.sent);\n        case 3:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return _deleteEmotion.apply(this, arguments);\n}\nfunction updateEmotionName(_x25, _x26) {\n  return _updateEmotionName.apply(this, arguments);\n}\nfunction _updateEmotionName() {\n  _updateEmotionName = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(emotion_id, value) {\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return templateFetch(\"/_updateEmotionName?emotion_id=\".concat(emotion_id), \"PUT\", {\n            value: value\n          });\n        case 2:\n          return _context18.abrupt(\"return\", _context18.sent);\n        case 3:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee18);\n  }));\n  return _updateEmotionName.apply(this, arguments);\n}\nfunction updateEmotionCategory(_x27, _x28) {\n  return _updateEmotionCategory.apply(this, arguments);\n}\n\n// Given a emotion_id, retrive emotion_name\nfunction _updateEmotionCategory() {\n  _updateEmotionCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(emotion_id, value) {\n    return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return templateFetch(\"/_updateEmotionCategory?\".concat(emotion_id), \"PUT\", {\n            value: value\n          });\n        case 2:\n          return _context19.abrupt(\"return\", _context19.sent);\n        case 3:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee19);\n  }));\n  return _updateEmotionCategory.apply(this, arguments);\n}\nfunction getEmotionName(_x29) {\n  return _getEmotionName.apply(this, arguments);\n}\n\n// Given a emotion_id, retrive emotion_name\nfunction _getEmotionName() {\n  _getEmotionName = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(emotion_id) {\n    return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n      while (1) switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return templateFetch(\"/_getEmotionName?emotion_id=\".concat(emotion_id), \"GET\");\n        case 2:\n          return _context20.abrupt(\"return\", _context20.sent);\n        case 3:\n        case \"end\":\n          return _context20.stop();\n      }\n    }, _callee20);\n  }));\n  return _getEmotionName.apply(this, arguments);\n}\nfunction getAllMovieIds() {\n  return _getAllMovieIds.apply(this, arguments);\n}\nfunction _getAllMovieIds() {\n  _getAllMovieIds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n    return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n      while (1) switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return templateFetch(\"/_getAllMovieIds\", \"GET\");\n        case 2:\n          return _context21.abrupt(\"return\", _context21.sent);\n        case 3:\n        case \"end\":\n          return _context21.stop();\n      }\n    }, _callee21);\n  }));\n  return _getAllMovieIds.apply(this, arguments);\n}\nfunction updateMovieName(_x30, _x31) {\n  return _updateMovieName.apply(this, arguments);\n}\nfunction _updateMovieName() {\n  _updateMovieName = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(movie_id, value) {\n    return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n      while (1) switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return templateFetch(\"/_updateMovieName?movie_id=\".concat(movie_id), \"PUT\", {\n            value: value\n          });\n        case 2:\n          return _context22.abrupt(\"return\", _context22.sent);\n        case 3:\n        case \"end\":\n          return _context22.stop();\n      }\n    }, _callee22);\n  }));\n  return _updateMovieName.apply(this, arguments);\n}\n\n//# sourceURL=webpack://auto-movie-marker/./src/utils/accessDB.js?");

/***/ }),

/***/ "./src/utils/config.js":
/*!*****************************!*\
  !*** ./src/utils/config.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"baseurl\": () => (/* binding */ baseurl),\n/* harmony export */   \"overlayContainer\": () => (/* binding */ overlayContainer)\n/* harmony export */ });\n// export const baseurl = \"http://localhost:8888/.netlify/functions\";\nvar baseurl = \"https://ubiquitous-seahorse-54f5aa.netlify.app/.netlify/functions\";\nvar overlayContainer = document.querySelector(\".overlay-container\");\n\n//# sourceURL=webpack://auto-movie-marker/./src/utils/config.js?");

/***/ }),

/***/ "./src/utils/utils.js":
/*!****************************!*\
  !*** ./src/utils/utils.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"combineClipEmotion\": () => (/* binding */ combineClipEmotion),\n/* harmony export */   \"doubleCloseOverlay\": () => (/* binding */ doubleCloseOverlay),\n/* harmony export */   \"isTopLevelUpdated\": () => (/* binding */ isTopLevelUpdated),\n/* harmony export */   \"isUpdated\": () => (/* binding */ isUpdated),\n/* harmony export */   \"offsetOverlayToViewport\": () => (/* binding */ offsetOverlayToViewport),\n/* harmony export */   \"topLevelUpdate\": () => (/* binding */ topLevelUpdate),\n/* harmony export */   \"update\": () => (/* binding */ update),\n/* harmony export */   \"validateInputText\": () => (/* binding */ validateInputText)\n/* harmony export */ });\n/* harmony import */ var _utils_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/config.js */ \"./src/utils/config.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n// the movies and clips can be opened from not immediate overlays\n// This serves as a reference to if the nested overlays have update\n// Easier than keeping tack of updated css classes when a lot of nesting\nvar topLevelUpdated = false;\nfunction combineClipEmotion(data) {\n  var clipsWithEmotions = [];\n  var _iterator = _createForOfIteratorHelper(data),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var clip = _step.value;\n      var clipData = _objectSpread(_objectSpread({}, clip), {}, {\n        emotion_ids: clip.emotion_id ? [clip.emotion_id] : [],\n        emotion_names: clip.emotion_name ? [clip.emotion_name] : []\n      });\n      var existingClip = clipsWithEmotions.find(function (c) {\n        return c.clip_id === clipData.clip_id;\n      });\n      if (existingClip) {\n        var _existingClip$emotion, _existingClip$emotion2;\n        (_existingClip$emotion = existingClip.emotion_names).push.apply(_existingClip$emotion, _toConsumableArray(clipData.emotion_names));\n        (_existingClip$emotion2 = existingClip.emotion_ids).push.apply(_existingClip$emotion2, _toConsumableArray(clipData.emotion_ids));\n      } else {\n        var newClip = {\n          clip_id: clipData.clip_id,\n          timecode: clipData.timecode,\n          description: clipData.description,\n          emotion_ids: clipData.emotion_ids,\n          emotion_names: clipData.emotion_names\n        };\n        if (clipData.movie_name) {\n          newClip.movie_name = clipData.movie_name;\n        }\n        if (clipData.image_url) {\n          newClip.image_url = clipData.image_url;\n        }\n        clipsWithEmotions.push(newClip);\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  clipsWithEmotions.sort(function (a, b) {\n    var aTime = convertTimecodeToSeconds(a.timecode);\n    var bTime = convertTimecodeToSeconds(b.timecode);\n    return aTime - bTime;\n  });\n  return clipsWithEmotions;\n}\nfunction convertTimecodeToSeconds(timecode) {\n  var parts = timecode.split(\":\");\n  var hours = parseInt(parts[0]);\n  var minutes = parseInt(parts[1]);\n  var seconds = parseInt(parts[2]);\n  var frames = parseInt(parts[3]);\n  var totalSeconds = hours * 3600 + minutes * 60 + seconds + frames / 30;\n  return totalSeconds;\n}\nfunction validateInputText(inputText, inputElement) {\n  inputText = inputText.trim();\n  if (inputText === \"\") {\n    inputElement.value = \"\";\n    alert(\"Please add an item\");\n    return false;\n  }\n  return true;\n}\nfunction isUpdated(updateReference) {\n  var updated = updateReference.classList.contains(\"updated\");\n  updateReference.classList.remove(\"updated\");\n  return updated;\n}\nfunction update(updateReference) {\n  topLevelUpdate();\n  updateReference.classList.add(\"updated\");\n}\nfunction isTopLevelUpdated(middle) {\n  var updated = topLevelUpdated;\n  if (!middle) {\n    topLevelUpdated = false;\n  }\n  return updated;\n}\nfunction topLevelUpdate() {\n  console.log(\"top level needs update\");\n  topLevelUpdated = true;\n}\nfunction doubleCloseOverlay() {\n  var nextDivBlockTrigger = _utils_config_js__WEBPACK_IMPORTED_MODULE_0__.overlayContainer.lastChild.querySelector(\".stop-event\");\n  nextDivBlockTrigger.click();\n}\nfunction willOverlayWidthOverflow40vw(x, width) {\n  // Get the dimensions of the viewport\n  var viewportWidth = window.innerWidth;\n\n  // Calculate the position of the bottom right corner of the overlay\n  var overlayRight = x + width;\n\n  // Check if the overlay will overflow\n  var isOverflow = overlayRight > viewportWidth;\n  return isOverflow;\n}\nfunction willOverlayHeightOverflow40vh(y, height) {\n  // Get the dimensions of the viewport\n  var viewportHeight = window.innerHeight;\n\n  // Calculate the position of the bottom right corner of the overlay\n  var overlayBottom = y + height;\n\n  // Check if the overlay will overflow\n  var isOverflow = overlayBottom > viewportHeight;\n  return isOverflow;\n}\nfunction offsetOverlayToViewport(divEventEnable) {\n  // offset the overlay window to be within viewport\n  var overlayWidth = divEventEnable.firstElementChild.offsetWidth;\n  var overlayHeight = divEventEnable.firstElementChild.offsetHeight;\n  var divPos = divEventEnable.parentElement;\n  var x = parseInt(divPos.style.left.match(/\\d+/)[0]);\n  var y = parseInt(divPos.style.top.match(/\\d+/)[0]);\n  var clickedWidth = parseInt(divPos.style.width.match(/\\d+/)[0]);\n  var clickedHeight = parseInt(divPos.style.height.match(/\\d+/)[0]);\n  if (willOverlayWidthOverflow40vw(x, overlayWidth)) {\n    divPos.style.left = x - (overlayWidth - clickedWidth) + \"px\";\n  }\n  if (willOverlayHeightOverflow40vh(y, overlayHeight)) {\n    divPos.style.top = y - (overlayHeight - clickedHeight) + \"px\";\n  }\n}\n\n//# sourceURL=webpack://auto-movie-marker/./src/utils/utils.js?");

/***/ }),

/***/ "./node_modules/insert-text-at-cursor/dist/index.esm.js":
/*!**************************************************************!*\
  !*** ./node_modules/insert-text-at-cursor/dist/index.esm.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar browserSupportsTextareaTextNodes;\n/**\n * @param {HTMLElement} input\n * @return {boolean}\n */\n\nfunction canManipulateViaTextNodes(input) {\n  if (input.nodeName !== \"TEXTAREA\") {\n    return false;\n  }\n\n  if (typeof browserSupportsTextareaTextNodes === \"undefined\") {\n    var textarea = document.createElement(\"textarea\");\n    textarea.value = 1;\n    browserSupportsTextareaTextNodes = !!textarea.firstChild;\n  }\n\n  return browserSupportsTextareaTextNodes;\n}\n/**\n * @param {HTMLTextAreaElement|HTMLInputElement} input\n * @param {string} text\n * @returns {void}\n */\n\n\nfunction index (input, text) {\n  // Most of the used APIs only work with the field selected\n  input.focus(); // IE 8-10\n\n  if (document.selection) {\n    var ieRange = document.selection.createRange();\n    ieRange.text = text; // Move cursor after the inserted text\n\n    ieRange.collapse(false\n    /* to the end */\n    );\n    ieRange.select();\n    return;\n  } // Webkit + Edge\n\n\n  var isSuccess = document.execCommand(\"insertText\", false, text);\n\n  if (!isSuccess) {\n    var start = input.selectionStart;\n    var end = input.selectionEnd; // Firefox (non-standard method)\n\n    if (typeof input.setRangeText === \"function\") {\n      input.setRangeText(text);\n    } else {\n      // To make a change we just need a Range, not a Selection\n      var range = document.createRange();\n      var textNode = document.createTextNode(text);\n\n      if (canManipulateViaTextNodes(input)) {\n        var node = input.firstChild; // If textarea is empty, just insert the text\n\n        if (!node) {\n          input.appendChild(textNode);\n        } else {\n          // Otherwise we need to find a nodes for start and end\n          var offset = 0;\n          var startNode = null;\n          var endNode = null;\n\n          while (node && (startNode === null || endNode === null)) {\n            var nodeLength = node.nodeValue.length; // if start of the selection falls into current node\n\n            if (start >= offset && start <= offset + nodeLength) {\n              range.setStart(startNode = node, start - offset);\n            } // if end of the selection falls into current node\n\n\n            if (end >= offset && end <= offset + nodeLength) {\n              range.setEnd(endNode = node, end - offset);\n            }\n\n            offset += nodeLength;\n            node = node.nextSibling;\n          } // If there is some text selected, remove it as we should replace it\n\n\n          if (start !== end) {\n            range.deleteContents();\n          }\n        }\n      } // If the node is a textarea and the range doesn't span outside the element\n      //\n      // Get the commonAncestorContainer of the selected range and test its type\n      // If the node is of type `#text` it means that we're still working with text nodes within our textarea element\n      // otherwise, if it's of type `#document` for example it means our selection spans outside the textarea.\n\n\n      if (canManipulateViaTextNodes(input) && range.commonAncestorContainer.nodeName === \"#text\") {\n        // Finally insert a new node. The browser will automatically split start and end nodes into two if necessary\n        range.insertNode(textNode);\n      } else {\n        // If the node is not a textarea or the range spans outside a textarea the only way is to replace the whole value\n        var value = input.value;\n        input.value = value.slice(0, start) + text + value.slice(end);\n      }\n    } // Correct the cursor position to be at the end of the insertion\n\n\n    input.setSelectionRange(start + text.length, start + text.length); // Notify any possible listeners of the change\n\n    var e = document.createEvent(\"UIEvent\");\n    e.initEvent(\"input\", true, false);\n    input.dispatchEvent(e);\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);\n//# sourceMappingURL=index.esm.js.map\n\n\n//# sourceURL=webpack://auto-movie-marker/./node_modules/insert-text-at-cursor/dist/index.esm.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/emotionList/emotionsList.js");
/******/ 	
/******/ })()
;